pipeline{
    agent any
    environment {
        // Define variables to store decrypted secrets
        MY_SECRET = sh(script: 'git secret reveal -p', returnStdout: true).trim()
        // Add more variables as needed
    }
    stages{
        stage("----") {
             steps{   // Example usage of the secret
                sh "echo $MY_SECRET"
                // Perform other steps using the secrets
            }
        }
        stage("envvar"){
            steps{
               sh 'printenv'
            }
        }
        stage("Install Dependencies"){
            steps{
                sh 'pip install -r requirements.txt'
            }
        }
        stage("Extract Data"){
            steps{
                sh 'python3 data_extraction.py'
            }
        }
        stage("Data Analysis"){
            steps{
                sh 'python3 data_analysis.py'
            }
        }
        stage("Data Preprocessing"){
            steps{
                sh 'python3 data_preprocess.py'
            }
        }
        stage("Data Visualization"){
            steps{
                sh 'python3 datavisualization.py'
            }
        }
        stage("Feature Engineering"){
            steps{
                sh 'python3 feature_engineering.py'
            }
        }
    }
    post{
       
        always {
            archiveArtifacts artifacts: 'student_performance_cleansed_data.csv', onlyIfSuccessful: true
        }
            }
}
